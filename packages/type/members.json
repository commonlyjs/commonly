[
  {
    "name": "Comparator",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Comparator/Comparator.ts",
      "specification": "/Comparator/Comparator.spec.ts"
    },
    "description": "The Comparator type represents a comparison function, which imposes a total ordering on enumerable lists."
  },
  {
    "name": "Function",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Function/Function.ts",
      "specification": "/Function/Function.spec.ts"
    },
    "description": "The Function type represents the {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function | function's constructor}."
  },
  {
    "name": "Identity",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Identity/Identity.ts",
      "specification": "/Identity/Identity.spec.ts"
    },
    "description": "The Identity type represents a function which takes a single value as an argument and returns that value, an {@link https://en.wikipedia.org/wiki/Identity_function | identity function}."
  },
  {
    "name": "Mapper",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Mapper/Mapper.ts",
      "specification": "/Mapper/Mapper.spec.ts"
    },
    "description": "The Mapper type represents a function which always a single value as an argument and returns a value, a {@link https://en.wikipedia.org/wiki/Map_(higher-order_function) | mapper function}."
  },
  {
    "name": "Nil",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Nil/Nil.ts",
      "specification": "/Nil/Nil.spec.ts"
    },
    "description": "The Nil type represents a union of undefined and null."
  },
  {
    "name": "Predicate",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Predicate/Predicate.ts",
      "specification": "/Predicate/Predicate.spec.ts"
    },
    "description": "The Predicate type represents a function which takes a single value as an argument and returns a boolean, a {@link https://en.wikipedia.org/wiki/Predicate_(mathematical_logic) | predicate function}."
  },
  {
    "name": "Primitive",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Primitive/Primitive.ts",
      "specification": "/Primitive/Primitive.spec.ts"
    },
    "description": "The Primitive type represents a union of {@link https://developer.mozilla.org/en-US/docs/Glossary/primitive | primitive} data types. An {@link https://developer.mozilla.org/en-US/docs/Glossary/undefined | undefined}, {@link https://developer.mozilla.org/en-US/docs/Glossary/null | null}, {@link https://developer.mozilla.org/en-US/docs/Glossary/boolean | boolean}, {@link https://developer.mozilla.org/en-US/docs/Glossary/number | number}, {@link https://developer.mozilla.org/en-US/docs/Glossary/bigint | bigint}, {@link https://developer.mozilla.org/en-US/docs/Glossary/string | string} and a {@link https://developer.mozilla.org/en-US/docs/Glossary/symbol | symbol}."
  },
  {
    "name": "Reduced",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Reduced/Reduced.ts",
      "specification": "/Reduced/Reduced.spec.ts"
    },
    "description": "[Not yet documented]"
  },
  {
    "name": "Reducer",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Reducer/Reducer.ts",
      "specification": "/Reducer/Reducer.spec.ts"
    },
    "description": "The Reducer type represents a function which takes an accumulator and a value and returns an updated accumulator."
  },
  {
    "name": "Transducer",
    "since": "1.0.0",
    "remarks": [],
    "signature": {
      "parameters": [],
      "typeparameters": [],
      "returnValue": {
        "type": null,
        "description": null
      }
    },
    "examples": [],
    "metadata": {
      "source": "/Transducer/Transducer.ts",
      "specification": "/Transducer/Transducer.spec.ts"
    },
    "description": "[Not yet documented]"
  }
]